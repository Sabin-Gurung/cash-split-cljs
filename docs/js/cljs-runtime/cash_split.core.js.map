{"version":3,"sources":["cash_split/core.cljs"],"mappings":"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","names":["cash-split.core/initial-state","js/cash-split","js/cash-split.core","js/cash-split.core.app-data","cash-split.core/app-data","reagent.core.atom","js/cash-split.core.new-default-username","cash-split.core/new-default-username","counter","cljs.core.atom","cljs.core.swap_BANG_","cljs.core/inc","p__15836","map__15837","cljs.core/--destructure-map","map__15838","cljs.core.get","cash-split.core/update-result","budgets","data","cash-split.calculator/calculate-budget","cljs.core.assoc","cash-split.core/update-name!","i","nme","cljs.core/deref","model","cljs.core/assoc-in","cljs.core/reset!","cash-split.core/update-amount!","amount","cash-split.core/remove-budget!","p1__15839#","remove-element","cljs.core/vec","cljs.core.concat","cljs.core.subvec","cljs.core/count","cljs.core.update_in","cash-split.core/add-budget!","cljs.core/conj","cash-split.core/reset-app-data!","cash-split.core/flatten-payment-graph","payment-graph","p1__15840#","cljs.core.filter","cljs.core/not-empty","cljs.core.mapcat","p__15842","map__15843","name","to-give","p1__15841#","cljs.core.map","p1__15844#","cash-split.core/input","cb","G__15845","cash-split.helpers/value","p1__15846#","cash-split.core/input-number","G__15847","cash-split.helpers/int-value","cash-split.core/add-button","cash-split.core/close-button","p__15850","map__15851","p1__15848#","p1__15849#","cash-split.core/budget-item","cash-split.core/budget-list","iter__5523__auto__","s__15853","cljs.core/LazySeq","temp__5804__auto__","cljs.core/seq","cljs.core/chunked-seq?","c__5521__auto__","size__5522__auto__","b__15855","cljs.core/chunk-buffer","i__15854","vec__15856","cljs.core/-nth","cljs.core.nth","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__15852","cljs.core/chunk-rest","vec__15859","cljs.core/first","cljs.core/cons","cljs.core/rest","budget","cljs.core.map_indexed","cljs.core/vector","cash-split.core/budget-form","cash-split.core/payment-summary","arr","p1__15862#","s__15864","b__15866","i__15865","vec__15867","map__15870","iter__15863","vec__15871","map__15874","from-name","p__15876","map__15877","cash-split.core/result->text","avg","total","p1__15875#","p__15880","map__15881","cljs.core.apply","cljs.core/str","p__15882","map__15883","cash-split.core/result-view","result","cash-split.helpers/copy-to-clipboard","cash-split.core/app","cljs.core.get_in","cash-split.core/mount-app","el","goog.dom/getElement","reagent.dom.render","cash-split.core/init","cljs.core.println","cash-split.core/stop","cash-split.core/start","cljs.core/chunk-first"],"sourcesContent":["(ns cash-split.core\n  (:require\n   [cash-split.calculator :as calc]\n   [cash-split.helpers :as helper :refer [copy-to-clipboard]]\n   [goog.dom :as gdom]\n   [reagent.core :as r]\n   [reagent.dom :as rdom]))\n\n; (def initial-state {:input {:budgets [{:name \"sabin\" :amount 100}\n;                                       {:name \"binod\" :amount 20}\n;                                       {:name \"sahara\" :amount 57}\n;                                       {:name \"ashish\" :amount 5}]}\n;                     :result {:average 0\n;                              :total 0\n;                              :payment-graph []}\n;                     })\n\n(def initial-state {:input {:budgets [{:name \"UserName\" :amount 0}]}\n                    :result {:avg 0\n                             :total 0\n                             :payment-graph []}\n                    })\n\n(defonce app-data (r/atom initial-state))\n\n(defonce new-default-username \n  (let [counter (atom -1)]\n    #(str \"User\" (swap! counter inc))))\n\n(defn update-result [{{budgets :budgets} :input :as data}]\n  (->> (calc/calculate-budget budgets)\n       (assoc data :result)))\n\n(defn update-name! [i nme]\n  (let [model @app-data]\n    (->> (assoc-in model [:input :budgets i :name] nme)\n         (update-result)\n         (reset! app-data))))\n\n(defn update-amount! [i amount]\n  (let [model @app-data]\n    (->> (assoc-in model [:input :budgets i :amount] amount)\n         (update-result)\n         (reset! app-data))))\n\n(defn remove-budget! [i]\n  (let [model @app-data\n        remove-element #(vec (concat (subvec % 0 i) (subvec % (inc i) (count %))))]\n    (->> (update-in model [:input :budgets] remove-element)\n         (update-result)\n         (reset! app-data))))\n\n(defn add-budget! []\n  (let [model @app-data]\n    (->> (update-in model [:input :budgets] conj {:name (new-default-username) :amount 0})\n         (update-result)\n         (reset! app-data))))\n\n(defn reset-app-data! []\n  (reset! app-data initial-state))\n\n(defn flatten-payment-graph [payment-graph]\n  (->> (filter #(not-empty (:to-give %)) payment-graph)\n       (mapcat (fn [{:keys [name to-give]}] (map #(assoc % :from-name name) to-give)))))\n\n(defn input [name cb]\n  [:input {:type \"text\" \n           :value name\n           :on-change #(cb (helper/value %)) }])\n\n(defn input-number [name cb]\n  [:input {:type \"text\" \n           :value name\n           :on-change #(some-> (helper/int-value %) cb) }])\n\n(defn add-button [cb]\n  [:button.add\n   {:on-click cb} \"+\"])\n\n(defn close-button [cb]\n  [:button.close\n   {:on-click cb} \"X\"])\n\n(defn budget-item [i {:keys [name amount]}]\n  [:div.budget-item\n   [input name #(update-name! i %) ]\n   [input-number amount #(update-amount! i %) ]\n   [close-button #(remove-budget! i) ]\n   ])\n\n(defn budget-list [budgets]\n  [:div\n   (for [[i budget] (map-indexed vector budgets)]\n     ^{:key i} [budget-item i budget])])\n\n(defn budget-form [budgets]\n  [:div.budget-form\n   [budget-list budgets]\n   [add-button #(add-budget!)]])\n\n(defn payment-summary [payment-graph] \n  (let [arr (->> (flatten-payment-graph payment-graph)\n                 (filter #(pos? (:amount %))))]\n    [:p\n     (for [[i {:keys [name from-name amount]}] (map-indexed vector arr)]\n       ^{:key i}[:span from-name \" -> \" name \" = \" amount [:br]])\n     ]))\n\n(defn result->text [{:keys [avg total payment-graph]}]\n  (str \"Summary:\\n\"\n       \"Total : \" total \"\\n\"\n       \"Average: \" avg \"\\n\"\n       \"----------------------\\n\"\n       (->> (flatten-payment-graph payment-graph)\n            (filter #(pos? (:amount %)))\n            (map (fn [{:keys [name from-name amount]}] (str from-name \" -> \" name \" = \" amount \"\\n\")))\n            (apply str))))\n\n(defn result-view [{:keys [avg total payment-graph] :as result}]\n  [:div.result \n   [:p \"Summary:\"]\n   [:p \n    \"Total : \" total [:br]\n    \"Average : \" avg [:br]\n    \"----------------------------\"\n    ]\n   [payment-summary payment-graph]\n   [:button {:on-click #(copy-to-clipboard (result->text result))} \"\ud83d\udccb\"]])\n\n(defn app []\n  (let [model @app-data]\n    [:div.app\n     [:p.title \"Ca\" [:span.gold \"$\"] \"h \" [:span.gold \"$\"] \"plit\"]\n     [budget-form (get-in model [:input :budgets])]\n     [:hr]\n     [result-view (:result model)]\n     [:p.footer\n       \"Check out \" [:a {:target \"_blank\" :href \"https://github.com/Sabin-Gurung/cash-split-cljs\"} \"source-code\"]\n      ]\n     ]))\n\n(defn mount-app [] \n  (when-let [el (gdom/getElement \"app\")] \n    (rdom/render [app] el)))\n\n(defn init []\n  (println \"----------Initialize App---------------\")\n  (mount-app))\n\n\n(defn ^:dev/before-load stop []\n  ; (js/console.log \"stop\")\n  )\n\n(defn ^:dev/after-load start []\n  ; (js/console.log \"start\")\n  (mount-app))\n\n(comment\n  (println @app-data)\n  (update-name! 0 \"sabin\")\n  (update-name! 1 \"binod\")\n  (update-amount! 3 10)\n  (remove-budget! 3)\n  (add-budget!)\n  (reset-app-data!)\n  (init)\n  (js/alert \"hello\")\n  (vec [1 2])\n  (new-default-username)\n  (-> @app-data\n      :result\n      result->text\n      println\n      )\n\n  (calc/calculate-budget (-> @app-data :input :budgets))\n  (into {} {:a \"1\" :b {:c \"b\" :b [1 2]}})\n  (update-result @app-data)\n\n  (number? \"1.0\")\n  (not-empty [1])\n\n  (map-indexed vector [1 2])\n\n\n  (println \"this is a comment\"))\n\n"]}